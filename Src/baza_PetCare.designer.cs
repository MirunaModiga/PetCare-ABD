#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace testnou
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PetCare")]
	public partial class baza_PetCareDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAppointment(Appointment instance);
    partial void UpdateAppointment(Appointment instance);
    partial void DeleteAppointment(Appointment instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertHealth_Record(Health_Record instance);
    partial void UpdateHealth_Record(Health_Record instance);
    partial void DeleteHealth_Record(Health_Record instance);
    partial void InsertMedication(Medication instance);
    partial void UpdateMedication(Medication instance);
    partial void DeleteMedication(Medication instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    partial void InsertPet(Pet instance);
    partial void UpdatePet(Pet instance);
    partial void DeletePet(Pet instance);
    #endregion
		
		public baza_PetCareDataContext() : 
				base(global::testnou.Properties.Settings.Default.PetCareConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public baza_PetCareDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public baza_PetCareDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public baza_PetCareDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public baza_PetCareDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Appointment> Appointments
		{
			get
			{
				return this.GetTable<Appointment>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Health_Record> Health_Records
		{
			get
			{
				return this.GetTable<Health_Record>();
			}
		}
		
		public System.Data.Linq.Table<Medication> Medications
		{
			get
			{
				return this.GetTable<Medication>();
			}
		}
		
		public System.Data.Linq.Table<Message> Messages
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		public System.Data.Linq.Table<Pet> Pets
		{
			get
			{
				return this.GetTable<Pet>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Appointments")]
	public partial class Appointment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAppointment;
		
		private int @__PetID;
		
		private int @__DoctorID;
		
		private System.DateTime @__date;
		
		private string @__purpose;
		
		private string @__status;
		
		private EntityRef<User> _User;
		
		private EntityRef<Pet> _Pet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAppointmentChanging(int value);
    partial void OnIDAppointmentChanged();
    partial void On_PetIDChanging(int value);
    partial void On_PetIDChanged();
    partial void On_DoctorIDChanging(int value);
    partial void On_DoctorIDChanged();
    partial void On_dateChanging(System.DateTime value);
    partial void On_dateChanged();
    partial void On_purposeChanging(string value);
    partial void On_purposeChanged();
    partial void On_statusChanging(string value);
    partial void On_statusChanged();
    #endregion
		
		public Appointment()
		{
			this._User = default(EntityRef<User>);
			this._Pet = default(EntityRef<Pet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAppointment", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDAppointment
		{
			get
			{
				return this._IDAppointment;
			}
			set
			{
				if ((this._IDAppointment != value))
				{
					this.OnIDAppointmentChanging(value);
					this.SendPropertyChanging();
					this._IDAppointment = value;
					this.SendPropertyChanged("IDAppointment");
					this.OnIDAppointmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_PetID]", Storage="__PetID", DbType="Int NOT NULL")]
		public int _PetID
		{
			get
			{
				return this.@__PetID;
			}
			set
			{
				if ((this.@__PetID != value))
				{
					this.On_PetIDChanging(value);
					this.SendPropertyChanging();
					this.@__PetID = value;
					this.SendPropertyChanged("_PetID");
					this.On_PetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_DoctorID]", Storage="__DoctorID", DbType="Int NOT NULL")]
		public int _DoctorID
		{
			get
			{
				return this.@__DoctorID;
			}
			set
			{
				if ((this.@__DoctorID != value))
				{
					this.On_DoctorIDChanging(value);
					this.SendPropertyChanging();
					this.@__DoctorID = value;
					this.SendPropertyChanged("_DoctorID");
					this.On_DoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_date]", Storage="__date", DbType="Date NOT NULL")]
		public System.DateTime _date
		{
			get
			{
				return this.@__date;
			}
			set
			{
				if ((this.@__date != value))
				{
					this.On_dateChanging(value);
					this.SendPropertyChanging();
					this.@__date = value;
					this.SendPropertyChanged("_date");
					this.On_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_purpose]", Storage="__purpose", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string _purpose
		{
			get
			{
				return this.@__purpose;
			}
			set
			{
				if ((this.@__purpose != value))
				{
					this.On_purposeChanging(value);
					this.SendPropertyChanging();
					this.@__purpose = value;
					this.SendPropertyChanged("_purpose");
					this.On_purposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_status]", Storage="__status", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string _status
		{
			get
			{
				return this.@__status;
			}
			set
			{
				if ((this.@__status != value))
				{
					this.On_statusChanging(value);
					this.SendPropertyChanging();
					this.@__status = value;
					this.SendPropertyChanged("_status");
					this.On_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Appointment", Storage="_User", ThisKey="_DoctorID", OtherKey="IDUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Appointments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Appointments.Add(this);
						this.@__DoctorID = value.IDUser;
					}
					else
					{
						this.@__DoctorID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pet_Appointment", Storage="_Pet", ThisKey="_PetID", OtherKey="IDPet", IsForeignKey=true)]
		public Pet Pet
		{
			get
			{
				return this._Pet.Entity;
			}
			set
			{
				Pet previousValue = this._Pet.Entity;
				if (((previousValue != value) 
							|| (this._Pet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pet.Entity = null;
						previousValue.Appointments.Remove(this);
					}
					this._Pet.Entity = value;
					if ((value != null))
					{
						value.Appointments.Add(this);
						this.@__PetID = value.IDPet;
					}
					else
					{
						this.@__PetID = default(int);
					}
					this.SendPropertyChanged("Pet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDUser;
		
		private string @__FullName;
		
		private string @__Username;
		
		private string @__Password;
		
		private string @__Email;
		
		private string @__usertype;
		
		private EntitySet<Appointment> _Appointments;
		
		private EntitySet<Health_Record> _Health_Records;
		
		private EntitySet<Message> _Messages;
		
		private EntitySet<Message> _Messages1;
		
		private EntitySet<Pet> _Pets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUserChanging(int value);
    partial void OnIDUserChanged();
    partial void On_FullNameChanging(string value);
    partial void On_FullNameChanged();
    partial void On_UsernameChanging(string value);
    partial void On_UsernameChanged();
    partial void On_PasswordChanging(string value);
    partial void On_PasswordChanged();
    partial void On_EmailChanging(string value);
    partial void On_EmailChanged();
    partial void On_usertypeChanging(string value);
    partial void On_usertypeChanged();
    #endregion
		
		public User()
		{
			this._Appointments = new EntitySet<Appointment>(new Action<Appointment>(this.attach_Appointments), new Action<Appointment>(this.detach_Appointments));
			this._Health_Records = new EntitySet<Health_Record>(new Action<Health_Record>(this.attach_Health_Records), new Action<Health_Record>(this.detach_Health_Records));
			this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
			this._Messages1 = new EntitySet<Message>(new Action<Message>(this.attach_Messages1), new Action<Message>(this.detach_Messages1));
			this._Pets = new EntitySet<Pet>(new Action<Pet>(this.attach_Pets), new Action<Pet>(this.detach_Pets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_FullName]", Storage="__FullName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string _FullName
		{
			get
			{
				return this.@__FullName;
			}
			set
			{
				if ((this.@__FullName != value))
				{
					this.On_FullNameChanging(value);
					this.SendPropertyChanging();
					this.@__FullName = value;
					this.SendPropertyChanged("_FullName");
					this.On_FullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Username]", Storage="__Username", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string _Username
		{
			get
			{
				return this.@__Username;
			}
			set
			{
				if ((this.@__Username != value))
				{
					this.On_UsernameChanging(value);
					this.SendPropertyChanging();
					this.@__Username = value;
					this.SendPropertyChanged("_Username");
					this.On_UsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Password]", Storage="__Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string _Password
		{
			get
			{
				return this.@__Password;
			}
			set
			{
				if ((this.@__Password != value))
				{
					this.On_PasswordChanging(value);
					this.SendPropertyChanging();
					this.@__Password = value;
					this.SendPropertyChanged("_Password");
					this.On_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Email]", Storage="__Email", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string _Email
		{
			get
			{
				return this.@__Email;
			}
			set
			{
				if ((this.@__Email != value))
				{
					this.On_EmailChanging(value);
					this.SendPropertyChanging();
					this.@__Email = value;
					this.SendPropertyChanged("_Email");
					this.On_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_usertype]", Storage="__usertype", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string _usertype
		{
			get
			{
				return this.@__usertype;
			}
			set
			{
				if ((this.@__usertype != value))
				{
					this.On_usertypeChanging(value);
					this.SendPropertyChanging();
					this.@__usertype = value;
					this.SendPropertyChanged("_usertype");
					this.On_usertypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Appointment", Storage="_Appointments", ThisKey="IDUser", OtherKey="_DoctorID")]
		public EntitySet<Appointment> Appointments
		{
			get
			{
				return this._Appointments;
			}
			set
			{
				this._Appointments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Health_Record", Storage="_Health_Records", ThisKey="IDUser", OtherKey="_DoctorID")]
		public EntitySet<Health_Record> Health_Records
		{
			get
			{
				return this._Health_Records;
			}
			set
			{
				this._Health_Records.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message", Storage="_Messages", ThisKey="IDUser", OtherKey="_ReceiverID")]
		public EntitySet<Message> Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message1", Storage="_Messages1", ThisKey="IDUser", OtherKey="_SenderID")]
		public EntitySet<Message> Messages1
		{
			get
			{
				return this._Messages1;
			}
			set
			{
				this._Messages1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Pet", Storage="_Pets", ThisKey="IDUser", OtherKey="_OwnerID")]
		public EntitySet<Pet> Pets
		{
			get
			{
				return this._Pets;
			}
			set
			{
				this._Pets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Health_Records(Health_Record entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Health_Records(Health_Record entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Messages1(Message entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Messages1(Message entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Pets(Pet entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Pets(Pet entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Health Records]")]
	public partial class Health_Record : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRecord;
		
		private int @__PetID;
		
		private int @__DoctorID;
		
		private System.DateTime @__date;
		
		private string @__diagnosis;
		
		private string @__treatment;
		
		private EntityRef<User> _User;
		
		private EntityRef<Pet> _Pet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRecordChanging(int value);
    partial void OnIDRecordChanged();
    partial void On_PetIDChanging(int value);
    partial void On_PetIDChanged();
    partial void On_DoctorIDChanging(int value);
    partial void On_DoctorIDChanged();
    partial void On_dateChanging(System.DateTime value);
    partial void On_dateChanged();
    partial void On_diagnosisChanging(string value);
    partial void On_diagnosisChanged();
    partial void On_treatmentChanging(string value);
    partial void On_treatmentChanged();
    #endregion
		
		public Health_Record()
		{
			this._User = default(EntityRef<User>);
			this._Pet = default(EntityRef<Pet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRecord", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDRecord
		{
			get
			{
				return this._IDRecord;
			}
			set
			{
				if ((this._IDRecord != value))
				{
					this.OnIDRecordChanging(value);
					this.SendPropertyChanging();
					this._IDRecord = value;
					this.SendPropertyChanged("IDRecord");
					this.OnIDRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_PetID]", Storage="__PetID", DbType="Int NOT NULL")]
		public int _PetID
		{
			get
			{
				return this.@__PetID;
			}
			set
			{
				if ((this.@__PetID != value))
				{
					this.On_PetIDChanging(value);
					this.SendPropertyChanging();
					this.@__PetID = value;
					this.SendPropertyChanged("_PetID");
					this.On_PetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_DoctorID]", Storage="__DoctorID", DbType="Int NOT NULL")]
		public int _DoctorID
		{
			get
			{
				return this.@__DoctorID;
			}
			set
			{
				if ((this.@__DoctorID != value))
				{
					this.On_DoctorIDChanging(value);
					this.SendPropertyChanging();
					this.@__DoctorID = value;
					this.SendPropertyChanged("_DoctorID");
					this.On_DoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_date]", Storage="__date", DbType="Date NOT NULL")]
		public System.DateTime _date
		{
			get
			{
				return this.@__date;
			}
			set
			{
				if ((this.@__date != value))
				{
					this.On_dateChanging(value);
					this.SendPropertyChanging();
					this.@__date = value;
					this.SendPropertyChanged("_date");
					this.On_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_diagnosis]", Storage="__diagnosis", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string _diagnosis
		{
			get
			{
				return this.@__diagnosis;
			}
			set
			{
				if ((this.@__diagnosis != value))
				{
					this.On_diagnosisChanging(value);
					this.SendPropertyChanging();
					this.@__diagnosis = value;
					this.SendPropertyChanged("_diagnosis");
					this.On_diagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_treatment]", Storage="__treatment", DbType="NVarChar(100)")]
		public string _treatment
		{
			get
			{
				return this.@__treatment;
			}
			set
			{
				if ((this.@__treatment != value))
				{
					this.On_treatmentChanging(value);
					this.SendPropertyChanging();
					this.@__treatment = value;
					this.SendPropertyChanged("_treatment");
					this.On_treatmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Health_Record", Storage="_User", ThisKey="_DoctorID", OtherKey="IDUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Health_Records.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Health_Records.Add(this);
						this.@__DoctorID = value.IDUser;
					}
					else
					{
						this.@__DoctorID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pet_Health_Record", Storage="_Pet", ThisKey="_PetID", OtherKey="IDPet", IsForeignKey=true)]
		public Pet Pet
		{
			get
			{
				return this._Pet.Entity;
			}
			set
			{
				Pet previousValue = this._Pet.Entity;
				if (((previousValue != value) 
							|| (this._Pet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pet.Entity = null;
						previousValue.Health_Records.Remove(this);
					}
					this._Pet.Entity = value;
					if ((value != null))
					{
						value.Health_Records.Add(this);
						this.@__PetID = value.IDPet;
					}
					else
					{
						this.@__PetID = default(int);
					}
					this.SendPropertyChanged("Pet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Medication")]
	public partial class Medication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMedication;
		
		private int @__PetID;
		
		private string @__medicationName;
		
		private int @__dosage;
		
		private int @__frequency;
		
		private System.DateTime @__start;
		
		private System.DateTime @__end;
		
		private string @__notes;
		
		private EntityRef<Pet> _Pet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMedicationChanging(int value);
    partial void OnIDMedicationChanged();
    partial void On_PetIDChanging(int value);
    partial void On_PetIDChanged();
    partial void On_medicationNameChanging(string value);
    partial void On_medicationNameChanged();
    partial void On_dosageChanging(int value);
    partial void On_dosageChanged();
    partial void On_frequencyChanging(int value);
    partial void On_frequencyChanged();
    partial void On_startChanging(System.DateTime value);
    partial void On_startChanged();
    partial void On_endChanging(System.DateTime value);
    partial void On_endChanged();
    partial void On_notesChanging(string value);
    partial void On_notesChanged();
    #endregion
		
		public Medication()
		{
			this._Pet = default(EntityRef<Pet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMedication", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDMedication
		{
			get
			{
				return this._IDMedication;
			}
			set
			{
				if ((this._IDMedication != value))
				{
					this.OnIDMedicationChanging(value);
					this.SendPropertyChanging();
					this._IDMedication = value;
					this.SendPropertyChanged("IDMedication");
					this.OnIDMedicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_PetID]", Storage="__PetID", DbType="Int NOT NULL")]
		public int _PetID
		{
			get
			{
				return this.@__PetID;
			}
			set
			{
				if ((this.@__PetID != value))
				{
					this.On_PetIDChanging(value);
					this.SendPropertyChanging();
					this.@__PetID = value;
					this.SendPropertyChanged("_PetID");
					this.On_PetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_medicationName]", Storage="__medicationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string _medicationName
		{
			get
			{
				return this.@__medicationName;
			}
			set
			{
				if ((this.@__medicationName != value))
				{
					this.On_medicationNameChanging(value);
					this.SendPropertyChanging();
					this.@__medicationName = value;
					this.SendPropertyChanged("_medicationName");
					this.On_medicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_dosage]", Storage="__dosage", DbType="Int NOT NULL")]
		public int _dosage
		{
			get
			{
				return this.@__dosage;
			}
			set
			{
				if ((this.@__dosage != value))
				{
					this.On_dosageChanging(value);
					this.SendPropertyChanging();
					this.@__dosage = value;
					this.SendPropertyChanged("_dosage");
					this.On_dosageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_frequency]", Storage="__frequency", DbType="Int NOT NULL")]
		public int _frequency
		{
			get
			{
				return this.@__frequency;
			}
			set
			{
				if ((this.@__frequency != value))
				{
					this.On_frequencyChanging(value);
					this.SendPropertyChanging();
					this.@__frequency = value;
					this.SendPropertyChanged("_frequency");
					this.On_frequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_start]", Storage="__start", DbType="Date NOT NULL")]
		public System.DateTime _start
		{
			get
			{
				return this.@__start;
			}
			set
			{
				if ((this.@__start != value))
				{
					this.On_startChanging(value);
					this.SendPropertyChanging();
					this.@__start = value;
					this.SendPropertyChanged("_start");
					this.On_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_end]", Storage="__end", DbType="Date NOT NULL")]
		public System.DateTime _end
		{
			get
			{
				return this.@__end;
			}
			set
			{
				if ((this.@__end != value))
				{
					this.On_endChanging(value);
					this.SendPropertyChanging();
					this.@__end = value;
					this.SendPropertyChanged("_end");
					this.On_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_notes]", Storage="__notes", DbType="NVarChar(100)")]
		public string _notes
		{
			get
			{
				return this.@__notes;
			}
			set
			{
				if ((this.@__notes != value))
				{
					this.On_notesChanging(value);
					this.SendPropertyChanging();
					this.@__notes = value;
					this.SendPropertyChanged("_notes");
					this.On_notesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pet_Medication", Storage="_Pet", ThisKey="_PetID", OtherKey="IDPet", IsForeignKey=true)]
		public Pet Pet
		{
			get
			{
				return this._Pet.Entity;
			}
			set
			{
				Pet previousValue = this._Pet.Entity;
				if (((previousValue != value) 
							|| (this._Pet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pet.Entity = null;
						previousValue.Medications.Remove(this);
					}
					this._Pet.Entity = value;
					if ((value != null))
					{
						value.Medications.Add(this);
						this.@__PetID = value.IDPet;
					}
					else
					{
						this.@__PetID = default(int);
					}
					this.SendPropertyChanged("Pet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Messages")]
	public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMessage;
		
		private int @__SenderID;
		
		private int @__ReceiverID;
		
		private string @__messageContent;
		
		private System.DateTime @__timestamp;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMessageChanging(int value);
    partial void OnIDMessageChanged();
    partial void On_SenderIDChanging(int value);
    partial void On_SenderIDChanged();
    partial void On_ReceiverIDChanging(int value);
    partial void On_ReceiverIDChanged();
    partial void On_messageContentChanging(string value);
    partial void On_messageContentChanged();
    partial void On_timestampChanging(System.DateTime value);
    partial void On_timestampChanged();
    #endregion
		
		public Message()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMessage", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDMessage
		{
			get
			{
				return this._IDMessage;
			}
			set
			{
				if ((this._IDMessage != value))
				{
					this.OnIDMessageChanging(value);
					this.SendPropertyChanging();
					this._IDMessage = value;
					this.SendPropertyChanged("IDMessage");
					this.OnIDMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_SenderID]", Storage="__SenderID", DbType="Int NOT NULL")]
		public int _SenderID
		{
			get
			{
				return this.@__SenderID;
			}
			set
			{
				if ((this.@__SenderID != value))
				{
					this.On_SenderIDChanging(value);
					this.SendPropertyChanging();
					this.@__SenderID = value;
					this.SendPropertyChanged("_SenderID");
					this.On_SenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_ReceiverID]", Storage="__ReceiverID", DbType="Int NOT NULL")]
		public int _ReceiverID
		{
			get
			{
				return this.@__ReceiverID;
			}
			set
			{
				if ((this.@__ReceiverID != value))
				{
					this.On_ReceiverIDChanging(value);
					this.SendPropertyChanging();
					this.@__ReceiverID = value;
					this.SendPropertyChanged("_ReceiverID");
					this.On_ReceiverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_messageContent]", Storage="__messageContent", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string _messageContent
		{
			get
			{
				return this.@__messageContent;
			}
			set
			{
				if ((this.@__messageContent != value))
				{
					this.On_messageContentChanging(value);
					this.SendPropertyChanging();
					this.@__messageContent = value;
					this.SendPropertyChanged("_messageContent");
					this.On_messageContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_timestamp]", Storage="__timestamp", DbType="Date NOT NULL")]
		public System.DateTime _timestamp
		{
			get
			{
				return this.@__timestamp;
			}
			set
			{
				if ((this.@__timestamp != value))
				{
					this.On_timestampChanging(value);
					this.SendPropertyChanging();
					this.@__timestamp = value;
					this.SendPropertyChanged("_timestamp");
					this.On_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message", Storage="_User", ThisKey="_ReceiverID", OtherKey="IDUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Messages.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Messages.Add(this);
						this.@__ReceiverID = value.IDUser;
					}
					else
					{
						this.@__ReceiverID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message1", Storage="_User1", ThisKey="_SenderID", OtherKey="IDUser", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Messages1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Messages1.Add(this);
						this.@__SenderID = value.IDUser;
					}
					else
					{
						this.@__SenderID = default(int);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pets")]
	public partial class Pet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPet;
		
		private int @__OwnerID;
		
		private string @__petName;
		
		private string @__sex;
		
		private string @__breed;
		
		private string @__color;
		
		private System.DateTime @__birthdate;
		
		private string @__petType;
		
		private string @__photo;
		
		private EntitySet<Appointment> _Appointments;
		
		private EntitySet<Health_Record> _Health_Records;
		
		private EntitySet<Medication> _Medications;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPetChanging(int value);
    partial void OnIDPetChanged();
    partial void On_OwnerIDChanging(int value);
    partial void On_OwnerIDChanged();
    partial void On_petNameChanging(string value);
    partial void On_petNameChanged();
    partial void On_sexChanging(string value);
    partial void On_sexChanged();
    partial void On_breedChanging(string value);
    partial void On_breedChanged();
    partial void On_colorChanging(string value);
    partial void On_colorChanged();
    partial void On_birthdateChanging(System.DateTime value);
    partial void On_birthdateChanged();
    partial void On_petTypeChanging(string value);
    partial void On_petTypeChanged();
    partial void On_photoChanging(string value);
    partial void On_photoChanged();
    #endregion
		
		public Pet()
		{
			this._Appointments = new EntitySet<Appointment>(new Action<Appointment>(this.attach_Appointments), new Action<Appointment>(this.detach_Appointments));
			this._Health_Records = new EntitySet<Health_Record>(new Action<Health_Record>(this.attach_Health_Records), new Action<Health_Record>(this.detach_Health_Records));
			this._Medications = new EntitySet<Medication>(new Action<Medication>(this.attach_Medications), new Action<Medication>(this.detach_Medications));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPet", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPet
		{
			get
			{
				return this._IDPet;
			}
			set
			{
				if ((this._IDPet != value))
				{
					this.OnIDPetChanging(value);
					this.SendPropertyChanging();
					this._IDPet = value;
					this.SendPropertyChanged("IDPet");
					this.OnIDPetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_OwnerID]", Storage="__OwnerID", DbType="Int NOT NULL")]
		public int _OwnerID
		{
			get
			{
				return this.@__OwnerID;
			}
			set
			{
				if ((this.@__OwnerID != value))
				{
					this.On_OwnerIDChanging(value);
					this.SendPropertyChanging();
					this.@__OwnerID = value;
					this.SendPropertyChanged("_OwnerID");
					this.On_OwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_petName]", Storage="__petName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string _petName
		{
			get
			{
				return this.@__petName;
			}
			set
			{
				if ((this.@__petName != value))
				{
					this.On_petNameChanging(value);
					this.SendPropertyChanging();
					this.@__petName = value;
					this.SendPropertyChanged("_petName");
					this.On_petNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_sex]", Storage="__sex", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string _sex
		{
			get
			{
				return this.@__sex;
			}
			set
			{
				if ((this.@__sex != value))
				{
					this.On_sexChanging(value);
					this.SendPropertyChanging();
					this.@__sex = value;
					this.SendPropertyChanged("_sex");
					this.On_sexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_breed]", Storage="__breed", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string _breed
		{
			get
			{
				return this.@__breed;
			}
			set
			{
				if ((this.@__breed != value))
				{
					this.On_breedChanging(value);
					this.SendPropertyChanging();
					this.@__breed = value;
					this.SendPropertyChanged("_breed");
					this.On_breedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_color]", Storage="__color", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string _color
		{
			get
			{
				return this.@__color;
			}
			set
			{
				if ((this.@__color != value))
				{
					this.On_colorChanging(value);
					this.SendPropertyChanging();
					this.@__color = value;
					this.SendPropertyChanged("_color");
					this.On_colorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_birthdate]", Storage="__birthdate", DbType="Date NOT NULL")]
		public System.DateTime _birthdate
		{
			get
			{
				return this.@__birthdate;
			}
			set
			{
				if ((this.@__birthdate != value))
				{
					this.On_birthdateChanging(value);
					this.SendPropertyChanging();
					this.@__birthdate = value;
					this.SendPropertyChanged("_birthdate");
					this.On_birthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_petType]", Storage="__petType", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string _petType
		{
			get
			{
				return this.@__petType;
			}
			set
			{
				if ((this.@__petType != value))
				{
					this.On_petTypeChanging(value);
					this.SendPropertyChanging();
					this.@__petType = value;
					this.SendPropertyChanged("_petType");
					this.On_petTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_photo]", Storage="__photo", DbType="NVarChar(100)")]
		public string _photo
		{
			get
			{
				return this.@__photo;
			}
			set
			{
				if ((this.@__photo != value))
				{
					this.On_photoChanging(value);
					this.SendPropertyChanging();
					this.@__photo = value;
					this.SendPropertyChanged("_photo");
					this.On_photoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pet_Appointment", Storage="_Appointments", ThisKey="IDPet", OtherKey="_PetID")]
		public EntitySet<Appointment> Appointments
		{
			get
			{
				return this._Appointments;
			}
			set
			{
				this._Appointments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pet_Health_Record", Storage="_Health_Records", ThisKey="IDPet", OtherKey="_PetID")]
		public EntitySet<Health_Record> Health_Records
		{
			get
			{
				return this._Health_Records;
			}
			set
			{
				this._Health_Records.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pet_Medication", Storage="_Medications", ThisKey="IDPet", OtherKey="_PetID")]
		public EntitySet<Medication> Medications
		{
			get
			{
				return this._Medications;
			}
			set
			{
				this._Medications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Pet", Storage="_User", ThisKey="_OwnerID", OtherKey="IDUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Pets.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Pets.Add(this);
						this.@__OwnerID = value.IDUser;
					}
					else
					{
						this.@__OwnerID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Pet = this;
		}
		
		private void detach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Pet = null;
		}
		
		private void attach_Health_Records(Health_Record entity)
		{
			this.SendPropertyChanging();
			entity.Pet = this;
		}
		
		private void detach_Health_Records(Health_Record entity)
		{
			this.SendPropertyChanging();
			entity.Pet = null;
		}
		
		private void attach_Medications(Medication entity)
		{
			this.SendPropertyChanging();
			entity.Pet = this;
		}
		
		private void detach_Medications(Medication entity)
		{
			this.SendPropertyChanging();
			entity.Pet = null;
		}
	}
}
#pragma warning restore 1591
